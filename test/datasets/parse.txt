Basic numbers
    : ()
  123  : 123
  123.456  : 123.456
  0  : 0
  1  : 1
  999  : 999
  0.0  : 0
  0.1  : 0.1
  0.001  : 0.001
  0.123456789  : 0.123456789
  1.0  : 1
  10.0  : 10
  100.5  : 100.5
  999999.999999  : 999999.999999
  0.000001  : 0.000001
  1000000  : 1000000
  42  : 42
  3.14159  : 3.14159
  2.71828  : 2.71828
Binary operations
  5 <+> 3  : (5 + 3)
  10 <-> <-> 4  : (10 - 4)
  10 <-> 4  : (10 - 4)
  6 <×> 7  : (6 × 7)
  20 <÷> 5  : (20 ÷ 5)
  2 <^> 3  : (2 ^ 3)
  1 <+> 1  : (1 + 1)
  100 <+> 200  : (100 + 200)
  15.5 <+> 24.3  : (15.5 + 24.3)
  50 <-> 25  : (50 - 25)
  7.8 <-> 2.3  : (7.8 - 2.3)
  12 <×> 8  : (12 × 8)
  3.5 <×> 2.2  : (3.5 × 2.2)
  36 <÷> 6  : (36 ÷ 6)
  15.6 <÷> 3.2  : (15.6 ÷ 3.2)
  3 <^> 4  : (3 ^ 4)
  10 <^> 0  : (10 ^ 0)
  2 <^> 10  : (2 ^ 10)
  5 <^> 2  : (5 ^ 2)
  1.5 <^> 3  : (1.5 ^ 3)
Operator precedence
  2 <+> 3 <×> 4  : (2 + (3 × 4))
  10 <-> 6 <÷> 2  : (10 - (6 ÷ 2))
  2 <×> 3 <^> 2  : (2 × (3 ^ 2))
  5 <+> 2 <×> 6  : (5 + (2 × 6))
  8 <÷> 4 <+> 3  : ((8 ÷ 4) + 3)
  3 <^> 2 <+> 1  : ((3 ^ 2) + 1)
  4 <×> 2 <^> 3  : (4 × (2 ^ 3))
  15 <÷> 3 <-> 2  : ((15 ÷ 3) - 2)
  1 <+> 2 <^> 3 <×> 4  : (1 + ((2 ^ 3) × 4))
  6 <×> 2 <÷> 3  : ((6 × 2) ÷ 3)
  5 <^> 2 <^> 3  : (5 ^ (2 ^ 3))
Complex expressions
  2 <+> 3 <×> 4 <-> 5  : ((2 + (3 × 4)) - 5)
  2 <×> ( 3 <+> 4 )  : (2 × ((3 + 4)))
  1 <+> 2 <×> 3 <+> 4 <÷> 2  : ((1 + (2 × 3)) + (4 ÷ 2))
  5 <×> ( 2 <+> 3 ) <-> 1  : ((5 × ((2 + 3))) - 1)
  ( 8 <-> 3 ) <÷> ( 2 <+> 3 )  : (((8 - 3)) ÷ ((2 + 3)))
  3 <^> ( 2 <+> 1 ) <×> 2  : ((3 ^ ((2 + 1))) × 2)
  10 <-> 4 <×> 2 <+> 8 <÷> 4  : ((10 - (4 × 2)) + (8 ÷ 4))
  ( 1 <+> 2 ) <^> ( 3 <-> 1 )  : (((1 + 2)) ^ ((3 - 1)))
Constants
  [π]  : π
  [e]  : e
  [π] <+> [e]  : (π + e)
  [π] <-> [e]  : (π - e)
  [π] <×> [e]  : (π × e)
  [π] <÷> [e]  : (π ÷ e)
  [e] <^> [π]  : (e ^ π)
  2 <×> [π] <×> 3  : ((2 × π) × 3)
  [e] <+> 1 <-> [π]  : ((e + 1) - π)
  ( [π] <÷> 2 ) <×> [e]  : (((π ÷ 2)) × e)
More basic arithmetic operations
  0 <+> 0  : (0 + 0)
  999999 <+> 1  : (999999 + 1)
  10.5 <-> 3.2  : (10.5 - 3.2)
  100 <×> 0  : (100 × 0)
  22.5 <÷> 4.5  : (22.5 ÷ 4.5)
  <-> 5 <×> 3  : ((- 5) × 3)
  <-> 8 <×> <-> 2  : ((- 8) × (- 2))
Consecutive operators
  3 <+> <×> 4  : (3 × 4)
  3 <+> <-> 4  : (3 + (- 4))
  3 <-> <+> <×> 4  : (3 × 4)
  3 <+> <×> <-> 4  : (3 × (- 4))
  3 <+> <×> <-> <×> 4  : (3 × 4)
Extended operator precedence
  3 <×> 4 <+> 5  : ((3 × 4) + 5)
  20 <-> 12 <÷> 3  : (20 - (12 ÷ 3))
  2 <+> 3 <^> 2 <×> 4  : (2 + ((3 ^ 2) × 4))
  2 <^> 3 <^> 2  : (2 ^ (3 ^ 2))
  1 <+> 2 <×> 3 <^> 2 <-> 4 <÷> 2  : ((1 + (2 × (3 ^ 2))) - (4 ÷ 2))
Extended parentheses and nested expressions
  ( 2 <+> 3 ) <×> 4  : (((2 + 3)) × 4)
  ( ( 2 <+> 3 ) <×> 4 ) <-> 1  : (((((2 + 3)) × 4)) - 1)
  ( 5 <-> 2 ) <×> ( 3 <+> 1 )  : (((5 - 2)) × ((3 + 1)))
  ( 2 <+> 3 ) <^> 2  : (((2 + 3)) ^ 2)
Decimal precision and edge cases
  0.00001  : 0.00001
  3.141592653589793  : 3.141592653589793
  0.1 <+> 0.2  : (0.1 + 0.2)
  <-> 123.456  : (- 123.456)
  0.0 <+> 0  : (0 + 0)
Constants with operations
  2 <×> [π]  : (2 × π)
  [e] <^> 2  : (e ^ 2)
  ( [π] <+> [e] ) <÷> 2  : (((π + e)) ÷ 2)
Function expressions
  16 {√}  : √(16)
  30 {sin}  : sin(30)
  60 {cos}  : cos(60)
  45 {tan}  : tan(45)
  5 {x²}  : x²(5)
  25.0 {√}  : √(25)
  50 {%}  : %(50)
  0 {sin}  : sin(0)
  90 {cos}  : cos(90)
  45 {tan}  : tan(45)
  <-> 3 {x²}  : (- x²(3))
  10000 {√}  : √(10000)
  [π] {sin}  : sin(π)
  25 {√} {x²}  : x²(√(25))
  30 {sin} <+> 60 {cos}  : (sin(30) + cos(60))
  2 <×> 5 {x²}  : (2 × x²(5))
  ( 30 <+> 15 ) {sin}  : sin(((30 + 15)))
  ( 60 <÷> 2 ) {cos}  : cos(((60 ÷ 2)))
Equals token handling
  5 <+> 3 =  : (5 + 3)
Unary expressions and negative numbers
  <-> ( 5 <+> 3 )  : (- ((5 + 3)))
  <-> <-> 7  : (- 7)
  <-> 4 <×> 3  : ((- 4) × 3)
  <-> 9 {√}  : (- √(9))
Complex real-world calculator scenarios
  200 <×> 15 {%}  : (200 × %(15))
  1000 <×> ( 1 <+> 0.05 ) <^> 10  : (1000 × (((1 + 0.05)) ^ 10))
  [π] <×> 5 {x²}  : (π × x²(5))
  <-> 4 <×> 2 <×> 3  : (((- 4) × 2) × 3)
  0.5 <×> 10 <×> 5 {x²}  : ((0.5 × 10) × x²(5))
  ( 32 <-> 32 ) <×> 5 <÷> 9  : ((((32 - 32)) × 5) ÷ 9)
  10 <^> ( 2 <+> 3 <×> 0.5 )  : (10 ^ ((2 + (3 × 0.5))))
  30 {sin} {x²} <+> 30 {cos} {x²}  : (x²(sin(30)) + x²(cos(30)))
Edge cases and special scenarios
  ( 42 )  : (42)
  ( ( [π] ) )  : ((π))
  ( [e] ) {x²}  : x²((e))
  ( 2 <×> [π] <+> 3 {x²} ) <^> 2 <-> 10 {√}  : (((((2 × π) + x²(3))) ^ 2) - √(10))
Financial calculator operations
  1000 <+> ( 1000 <×> 12 {%} )  : (1000 + ((1000 × %(12))))
  5000 <-> ( 5000 <×> 25 {%} )  : (5000 - ((5000 × %(25))))
  1500 <÷> 12 <×> 24  : ((1500 ÷ 12) × 24)
Scientific calculator operations
  [e] <^> ( <-> 0.5 <×> 2 {x²} )  : (e ^ (((- 0.5) × x²(2))))
  2 <×> [π] <×> 6.37 <×> 10 <^> 6  : (((2 × π) × 6.37) × (10 ^ 6))
  9.81 <×> 100 {x²} <÷> 2  : ((9.81 × x²(100)) ÷ 2)
  60 {sin} <×> 5 <×> 45 {cos}  : ((sin(60) × 5) × cos(45))
Engineering calculator operations
  2.5 <×> 10 <^> 8 <×> 1.602 <×> 10 <^> <-> 19  : (((2.5 × (10 ^ 8)) × 1.602) × (10 ^ (- 19)))
  4 <÷> 3 <×> [π] <×> 2.5 {x²}  : (((4 ÷ 3) × π) × x²(2.5))
Geometric calculator operations
  [π] <×> ( 10 {x²} <-> 6 {x²} )  : (π × ((x²(10) - x²(6))))
  2 <×> [π] <×> 3.5 <×> 8.2  : (((2 × π) × 3.5) × 8.2)
  ( 12 {x²} <+> 5 {x²} ) {√}  : √(((x²(12) + x²(5))))
Trigonometric identity operations
  30 {sin} {x²} <+> 30 {cos} {x²} <-> 1  : ((x²(sin(30)) + x²(cos(30))) - 1)
  45 {sin} <÷> 45 {cos} <-> 45 {tan}  : ((sin(45) ÷ cos(45)) - tan(45))
Statistics and probability operations
  ( 1 <+> 2 <+> 3 <+> 4 <+> 5 ) <÷> 5  : ((((((1 + 2) + 3) + 4) + 5)) ÷ 5)
  ( ( 2 <-> 3 ) {x²} <+> ( 4 <-> 3 ) {x²} ) <÷> 2 {√}  : (((x²(((2 - 3))) + x²(((4 - 3))))) ÷ √(2))
Physics formula operations
  0.5 <×> 2 <×> 25 {x²}  : ((0.5 × 2) × x²(25))
  6.626 <×> 10 <^> <-> 34 <×> 3 <×> 10 <^> 8  : (((6.626 × (10 ^ (- 34))) × 3) × (10 ^ 8))
Mathematical series and sequences
  1 <+> 2 <+> 4 <+> 8 <+> 16 <+> 32  : (((((1 + 2) + 4) + 8) + 16) + 32)
  1 <×> 2 <×> 3 <×> 4 <×> 5 <×> 6  : (((((1 × 2) × 3) × 4) × 5) × 6)
Complex fraction operations
  1 <÷> ( 1 <÷> 2 <+> 1 <÷> 3 )  : (1 ÷ (((1 ÷ 2) + (1 ÷ 3))))
  ( 3 <÷> 4 <-> 1 <÷> 3 ) <×> ( 5 <÷> 6 <+> 2 <÷> 7 )  : ((((3 ÷ 4) - (1 ÷ 3))) × (((5 ÷ 6) + (2 ÷ 7))))
Mixed constant and function operations
  2 <×> [π] <×> [e] <^> 0.5 {sin}  : ((2 × π) × (e ^ sin(0.5)))
  ( [π] <÷> 2 ) {cos} <+> ( [π] <÷> 4 ) {sin}  : (cos(((π ÷ 2))) + sin(((π ÷ 4))))
Large number operations
  1000000 <×> 2000000 <÷> 500  : ((1000000 × 2000000) ÷ 500)
  999999999 <+> 1 <-> 1000000000  : ((999999999 + 1) - 1000000000)
Very small decimal operations
  0.000001 <×> 1000000  : (0.000001 × 1000000)
  0.123456789 <+> 0.987654321 <×> 3.14159  : (0.123456789 + (0.987654321 × 3.14159))
Advanced arithmetic operations
  1000000 <+> 1  : (1000000 + 1)
  1 <÷> 3 <×> 3  : ((1 ÷ 3) × 3)
  0 <÷> 5  : (0 ÷ 5)
  7 <^> 0  : (7 ^ 0)
  0 <^> 5  : (0 ^ 5)
  1 <^> 100  : (1 ^ 100)
Negative number operations
  <-> 5 <+> <-> 3  : ((- 5) + (- 3))
  <-> 2 <^> 3  : ((- 2) ^ 3)
  ( <-> 2 ) <^> 3  : (((- 2)) ^ 3)
Chain operations
  1 <+> 2 <+> 3 <+> 4 <+> 5  : ((((1 + 2) + 3) + 4) + 5)
  100 <÷> 5 <÷> 4 <÷> 2  : (((100 ÷ 5) ÷ 4) ÷ 2)
  2 <×> 3 <×> 4 <×> 5  : (((2 × 3) × 4) × 5)
Function chaining
  64 {√} {√} {x²}  : x²(√(√(64)))
  100 {%} {x²} <×> 50  : (x²(%(100)) × 50)
Business calculation patterns
  1200 <×> ( 1 <+> 8.5 {%} )  : (1200 × ((1 + %(8.5))))
  50000 <-> 45000 <÷> 45000 <×> 100 {%}  : (50000 - ((45000 ÷ 45000) × %(100)))
  10000 <÷> ( 1 <-> 20 {%} )  : (10000 ÷ ((1 - %(20))))
Unit conversion patterns
  100 <×> 2.54  : (100 × 2.54)
  ( 68 <-> 32 ) <×> 5 <÷> 9  : ((((68 - 32)) × 5) ÷ 9)
  60 <×> 60 <×> 24 <×> 365  : (((60 × 60) × 24) × 365)
Mathematical sequences
  1 <+> 1 <+> 2 <+> 3 <+> 5 <+> 8  : (((((1 + 1) + 2) + 3) + 5) + 8)
  2 <^> 1 <+> 2 <^> 2 <+> 2 <^> 3  : (((2 ^ 1) + (2 ^ 2)) + (2 ^ 3))
Physics formulas
  0.5 <×> 70 <×> 25 {x²}  : ((0.5 × 70) × x²(25))
  9.8 <×> 5 <×> 10 {x²} <÷> 2  : (((9.8 × 5) × x²(10)) ÷ 2)
  ( 3 {x²} <+> 4 {x²} ) {√}  : √(((x²(3) + x²(4))))
Extreme precision tests
  0.123456789012345 <×> 9.876543210987654  : (0.123456789012345 × 9.876543210987654)
  999999999.999999999 <+> 0.000000001  : (999999999.999999999 + 0.000000001)
  1 <÷> 7 <×> 7 <-> 1  : (((1 ÷ 7) × 7) - 1)
Error-prone scenarios
  1 <+> 2 <×> <-> 3  : (1 + (2 × (- 3)))
  0 <×> 999999  : (0 × 999999)
  1 <^> 0 <×> 100  : ((1 ^ 0) × 100)
